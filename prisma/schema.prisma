// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String    @id @default(cuid())
  name      String
  slug      String      @unique
  price     Float
  description String
  image     String?
  categories Category[]
  tags        Tag[]     @relation("ProductTags")
  orderItems OrderItem[]
  inventory   Inventory[]
}

model Category {
  id          String    @id @default(cuid())
  name      String
  slug      String      @unique
  image     String?
  products  Product[]
}

model Tag {
    id        String    @id @default(cuid())
    name      String    @unique
    slug      String    @unique
    products  Product[] @relation("ProductTags")
}

model Inventory {
  id          String    @id @default(cuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity     Int
}

model Order {
  id          String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId String
  user   User   @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}


model OrderItem {
  id        String    @id @default(cuid())
  quantity  Int
  productId String
  product   Product   @relation(fields: [productId], references: [id])
  orderId   String
  order     Order     @relation(fields: [orderId], references: [id])
}

