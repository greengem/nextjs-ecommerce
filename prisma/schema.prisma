// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String        @id @default(cuid())
  name        String
  slug        String        @unique
  price       Float
  description String
  imageUrl       String?
  categories  Category[]
  tags        Tag[]         @relation("ProductTags")
  orderItems  OrderItem[]
  variants    ProductVariant[]
  cartItems   CartItem[]
}

model ProductVariant {
  id          String        @id @default(cuid())
  productId   String
  product     Product       @relation(fields: [productId], references: [id])
  variantId   String
  variant     Variant       @relation(fields: [variantId], references: [id])
  inventory   Int
}

model Variant {
  id          String        @id @default(cuid())
  variantTypeId String
  variantType VariantType  @relation(fields: [variantTypeId], references: [id])
  value       String
  products    ProductVariant[]
}

model VariantType {
  id        String    @id @default(cuid())
  name      String
  variants  Variant[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  image     String?
  products  Product[]
}

model Tag {
  id        String    @id @default(cuid())
  name      String    @unique
  slug      String    @unique
  products  Product[] @relation("ProductTags")
}

model Order {
  id          String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId String
  orderItems OrderItem[]
}


model OrderItem {
  id        String    @id @default(cuid())
  quantity  Int
  productId String
  product   Product   @relation(fields: [productId], references: [id])
  orderId   String
  order     Order     @relation(fields: [orderId], references: [id])
}

model Cart {
  id        String      @id @default(cuid())
  userId    String
  cartItems CartItem[]
}

model CartItem {
  id        String    @id @default(cuid())
  quantity  Int
  productId String
  product   Product   @relation(fields: [productId], references: [id])
  cartId    String
  cart      Cart      @relation(fields: [cartId], references: [id])
}
